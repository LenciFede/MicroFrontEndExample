{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { NgZone } from '@angular/core';\nimport { singleSpaAngular } from 'single-spa-angular';\nimport { AppModule } from './app/app.module';\n//import { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n// if (environment.production) {\n//   enableProdMode();\n// }\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  NgZone\n});\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;","map":{"version":3,"mappings":";AACA,SAAyBA,MAAM,QAAQ,eAAe;AAGtD,SAAqCC,gBAAgB,QAAQ,oBAAoB;AAEjF,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE;AACA;AACA;AAEA,MAAMC,UAAU,GAAGH,gBAAgB,CAAC;EAClCI,iBAAiB,EAAEC,cAAc,IAAG;IAClCH,qBAAqB,CAACI,IAAI,CAACD,cAAc,CAAC;IAC1C,OAAOE,qCAAwB,CAACC,eAAe,CAACP,SAAS,CAAC;EAC5D,CAAC;EACDQ,QAAQ,EAAE,cAAc;EACxBV;CACD,CAAC;AAEF,OAAO,MAAMW,SAAS,GAAGP,UAAU,CAACO,SAAS;AAC7C,OAAO,MAAMC,KAAK,GAAGR,UAAU,CAACQ,KAAK;AACrC,OAAO,MAAMC,OAAO,GAAGT,UAAU,CAACS,OAAO","names":["NgZone","singleSpaAngular","AppModule","singleSpaPropsSubject","lifecycles","bootstrapFunction","singleSpaProps","next","__NgCli_bootstrap_1","bootstrapModule","template","bootstrap","mount","unmount"],"sourceRoot":"","sources":["/home/poseidon/Documentos/MicroFrontEndExample/mf-header/team-ux/src/main.single-spa.ts"],"sourcesContent":["\nimport { enableProdMode, NgZone } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { getSingleSpaExtraProviders, singleSpaAngular } from 'single-spa-angular';\n\nimport { AppModule } from './app/app.module';\n//import { environment } from './environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\n\n// if (environment.production) {\n//   enableProdMode();\n// }\n\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return platformBrowserDynamic().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  NgZone,\n});\n\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}